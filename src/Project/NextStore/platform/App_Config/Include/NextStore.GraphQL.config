<?xml version="1.0" encoding="utf-8" ?>

<!--
    Defines the system endpoint for the master database.
-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
    <sitecore>
        <api>
            <GraphQL>
                <endpoints>
                    <master url="/sitecore/api/graph/items/master" type="Sitecore.Services.GraphQL.Hosting.GraphQLEndpoint, Sitecore.Services.GraphQL.NetFxHost" resolve="true">
                        <url>$(url)</url>

                        <enabled role:require="ContentDelivery">false</enabled>

                        <enableSubscriptions>true</enableSubscriptions>

                        <!-- lock down the endpoint when deployed to content delivery -->
                        <graphiql role:require="ContentDelivery">false</graphiql>
                        <enableSchemaExport role:require="ContentDelivery">false</enableSchemaExport>
                        <enableStats role:require="ContentDelivery">false</enableStats>
                        <enableCacheStats role:require="ContentDelivery">false</enableCacheStats>
                        <disableIntrospection role:require="ContentDelivery">true</disableIntrospection>

                        <schema hint="list:AddSchemaProvider">
                            <!-- defaults are defined in Sitecore.Services.GraphQL.Content.config -->
                            <content ref="/sitecore/api/GraphQL/defaults/content/schemaProviders/systemContent" param1="master" />
                        </schema>

                        <!-- Determines the security of the service. Defaults are defined in Sitecore.Services.GraphQL.config -->
                        <security ref="/sitecore/api/GraphQL/defaults/security/publicService" />

                        <!-- Determines how performance is logged for the service. Defaults are defined in Sitecore.Services.GraphQL.config -->
                        <performance ref="/sitecore/api/GraphQL/defaults/performance/standard" />

                        <!--
                            Cache improves the query performance by caching parsed queries.
                            It is also possible to implement query whitelisting by implementing an authoritative query cache;
                            WhitelistingGraphQLQueryCache is an example of this, capturing queries to files in open mode and allowing only captured queries in whitelist mode.
                        -->
                        <cache type="Sitecore.Services.GraphQL.Hosting.QueryTransformation.Caching.GraphQLQueryCache, Sitecore.Services.GraphQL.NetFxHost">
                            <param desc="name">$(url)</param>
                            <param desc="maxSize">10MB</param>
                        </cache>
                        
                        <!-- 
                            Extenders allow modifying schema types after they are created by a schema provider but before they are added to the final schema.
                            This is useful when you want to _extend_ a generated schema, for example, to add external API
                            data onto the item API, or to add in custom internal data (e.g. custom layout data to power an app)
                            without having to modify a schema provider directly.
                        
                            Extenders must derive from SchemaExtender.
                        -->
                        <extenders hint="list:AddExtender">
                            <!--<example type="Name.Space.ExtenderType, Assembly" resolve="true" />-->
                        </extenders>
                    </master>
                </endpoints>
            </GraphQL>
        </api>
    </sitecore>
</configuration>